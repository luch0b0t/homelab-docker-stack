services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:${AFFINE_REVISION:-stable}
    container_name: affine_server
    ports:
      - "${PORT:-3010}:3010"
    env_file:
      - ../.env
    environment:
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}
      - AFFINE_INDEXER_ENABLED=false
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      affine_migration:
        condition: service_completed_successfully
    volumes:
      - "${UPLOAD_LOCATION}:/root/.affine/storage"
      - "${CONFIG_LOCATION}:/root/.affine/config"
    restart: unless-stopped

  affine_migration:
    image: ghcr.io/toeverything/affine-graphql:${AFFINE_REVISION:-stable}
    container_name: affine_migration_job
    command: ["sh","-c","node ./scripts/self-host-predeploy.js"]
    env_file:
      - ../.env
    environment:
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}
    volumes:
      - "${UPLOAD_LOCATION}:/root/.affine/storage"
      - "${CONFIG_LOCATION}:/root/.affine/config"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: "no"

  redis:
    image: redis:7
    container_name: affine_redis
    healthcheck:
      test: ["CMD","redis-cli","--raw","incr","ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres:
    image: pgvector/pgvector:pg16
    container_name: affine_postgres
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_INITDB_ARGS: "--data-checksums"
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - "${DB_DATA_LOCATION}:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD","pg_isready","-U","${DB_USERNAME}","-d","${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
